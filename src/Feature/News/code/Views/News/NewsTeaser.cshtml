@using Sitecore.Feature.News
@using Sitecore.Foundation.Alerts
@using Sitecore.Foundation.Alerts.Extensions
@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Repositories
@using Sitecore.Foundation.Theming.Extensions
@using Sitecore.Mvc.Presentation
@using Fortis.Model
@using Fortis.Foundation.CodeGen.Templates.Feature.News
@model IRenderingModel<IItemWrapper, INewsArticle>
@if (!Model?.RenderingItem?.IsDerived(NewsArticleConstants.TemplateID) ?? true)
{
  @Html.PageEditorError(AlertTexts.InvalidDataSourceTemplate(NewsArticleConstants.TemplateID), AlertTexts.InvalidDataSourceTemplateFriendlyMessage, Model.PageItem?.ItemID, Model.RenderingItem?.ItemID)
  return;
}

<div class="thumbnail @Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.GetBackgroundClass() m-b-1">
  <header class="thumbnail-header">
    <span class="label">
      @Model.RenderingItem.NewsDate.Render(new { format = "MMMM dd, yyyy"} )
    </span>
    <h3>
      @Model.RenderingItem.NewsTitle
    </h3>
  </header>
  <div>
    <a href="@Model.RenderingItem.GenerateUrl()">
      @Model.RenderingItem.NewsImage.Render(new { @class = "img-responsive", mw = 750 })
    </a>
  </div>
  <div class="caption">
    <p>
      @Model.RenderingItem.NewsSummary
    </p>
    <a href="@Model.RenderingItem.GenerateUrl()" class="btn btn-default">
      @Html.Sitecore().Dictionary("/news/news teaser/read more", "Read more")
    </a>
  </div>
</div>