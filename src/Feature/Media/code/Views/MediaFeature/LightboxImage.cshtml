@using Sitecore.Foundation.Alerts
@using Sitecore.Foundation.Alerts.Extensions
@using Fortis.Model
@using Fortis.Foundation.CodeGen.Templates.Feature.Media
@using Sitecore.Resources.Media
@model IRenderingModel<IItemWrapper, IHasMediaImage>
@if (Model.RenderingItem == null)
{
  @Html.PageEditorError(AlertTexts.InvalidDataSourceTemplate(HasMediaImageConstants.TemplateID), AlertTexts.InvalidDataSourceTemplateFriendlyMessage, Model.PageItem?.ItemID, Model.RenderingItem?.ItemID)
  return;
}

@*TODO: Page editor mode*@
@{
    const int ThumbnailWidth = 750;
    const int maxWidth = 1200;
    var thumbnail = Model.RenderingItem.MediaThumbnail.HasValue ?
        Model.RenderingItem.MediaThumbnail.Render(new {@class = "img-responsive", mw = ThumbnailWidth}) :
        Model.RenderingItem.MediaImage.Render(new {@class = "img-responsive", mw = ThumbnailWidth});

    if (string.IsNullOrWhiteSpace(thumbnail?.ToString()))
    {
        return;
    }
}

<div class="thumbnail mosaic mosaic-circle lightbox-item lightbox-image">
  <div class="mosaic-overlay mosaic-overlay-no-pointer">
    <span class="fa fa-search-plus icon-lg"></span>
  </div>
  <div class="mosaic-backdrop">
    <a href="@Model.RenderingItem.MediaImage.GetSourceUri(new MediaUrlOptions(maxWidth, 0, false))" data-type="image" data-title="@Model.RenderingItem.MediaTitleValue" data-footer="@Html.Encode(Model.RenderingItem.MediaDescriptionValue)" data-toggle="lightbox" data-gallery="page">
      @thumbnail
    </a>
  </div>
</div>
