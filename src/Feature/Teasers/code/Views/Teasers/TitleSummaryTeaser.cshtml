@using Sitecore.Feature.Teasers
@using Sitecore.Foundation.Alerts
@using Sitecore.Foundation.Alerts.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Foundation.Theming.Extensions
@using Fortis.Model
@using Fortis.Foundation.CodeGen.Templates.Feature.Teasers
@model IRenderingModel<IItemWrapper, ITeaserContent>
@if (Model.RenderingItem == null)
{
  @Html.PageEditorError(AlertTexts.InvalidDataSourceTemplate(TeaserContentConstants.TemplateID), AlertTexts.InvalidDataSourceTemplateFriendlyMessage, Model.PageItem?.ItemID, Model.RenderingItem?.ItemID)
  return;
}

<div class="well @Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.GetBackgroundClass()">
  @if (Model.RenderingItem.TeaserLabel.HasValue || Sitecore.Context.PageMode.IsExperienceEditor)
  {
    <span class="label">
      @Model.RenderingItem.TeaserLabel
    </span>
  }
  @if (Model.RenderingItem.TeaserTitle.HasValue || Sitecore.Context.PageMode.IsExperienceEditor)
  {
    <h4>
      @Model.RenderingItem.TeaserTitle
    </h4>
  }
  @if (Model.RenderingItem.TeaserSummary.HasValue || Sitecore.Context.PageMode.IsExperienceEditor)
  {
    <p>
      @Model.RenderingItem.TeaserSummary.Render(new { linebreaks = "<br>" })
    </p>
  }
  @if (Model.RenderingItem.TeaserLink.HasValue || Sitecore.Context.PageMode.IsExperienceEditor)
  {
    @Model.RenderingItem.TeaserLink.Render(new { @class = "btn btn-default" })
  }
</div>