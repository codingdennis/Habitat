@using Sitecore.Feature.Media.Repositories
@using Sitecore.Foundation.Alerts
@using Sitecore.Foundation.Alerts.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Resources.Media
@using Fortis.Model
@using Fortis.Foundation.CodeGen.Templates.Feature.Media
@using Fortis.Foundation.CodeGen.Templates.Project.Common.ContentTypes.Media
@model IRenderingModel<IItemWrapper, ICarousel>
@if (!Model?.RenderingItem?.IsDerived(CarouselConstants.TemplateID) ?? true)
{
    @Html.PageEditorError(AlertTexts.InvalidDataSourceTemplate(CarouselConstants.TemplateID), AlertTexts.InvalidDataSourceTemplateFriendlyMessage, Model.PageItem?.ItemID, Model.RenderingItem?.ItemID)
    return;
}

@{
    var carouselId = "carousel" + Guid.NewGuid().ToString("N");
    var elements = MediaSelectorElementsRepository.Get(Model.RenderingItem).ToArray();
}

<div id="@carouselId" class="carousel slide" data-ride="carousel" @(Sitecore.Context.PageMode.IsExperienceEditor ? "data-interval" : "")>
  <ol class="carousel-indicators">
    @for (var i = 0; i < elements.Length; i++)
    {
      <li data-target="#@carouselId" data-slide-to="@i" class="@elements[i].Active"></li>
    }
  </ol>

  <div class="carousel-inner" role="listbox">
    @foreach (var element in elements)
    {
      <div class="item @element.Active">
        @{
          var style = "background-image: ";
          var imageField = element.Item.IsDerived(HasMediaVideoConstants.TemplateID) ? (element.Item as IHasMedia)?.MediaThumbnail : (element.Item as IHasMediaImage)?.MediaImage;
          style += imageField?.GetSourceUri().ToCssUrlValue();
        }

        <div class="jumbotron jumbotron-xl bg-media" style="@style">
          @if (element.Item.IsDerived(HasMediaVideoConstants.TemplateID))
          {
            var videoItem = element.Item as IHasMediaVideo;  
            <video autoplay="" loop="" muted="" class="video-bg">
              <source src="@videoItem?.MediaVideoLink.Url" type="video/mp4">
            </video>
          }

          <div class="container">
            <div class="row">
              <div class="col-md-12">
                <h1>@((element.Item as IHasMedia)?.MediaTitle)</h1>
                <p class="lead">
                  @((element.Item as IHasMedia)?.MediaDescription)
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    }
  </div>

  <a class="left carousel-control" href="#@carouselId" role="button" data-slide="prev">
    <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
    <span class="sr-only">Previous</span>
  </a>
  <a class="right carousel-control" href="#@carouselId" role="button" data-slide="next">
    <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
    <span class="sr-only">Next</span>
  </a>

</div>