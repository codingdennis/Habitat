@using Sitecore.Foundation.Alerts
@using Sitecore.Foundation.Alerts.Extensions
@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Foundation.Theming.Extensions
@using Fortis.Model
@using Fortis.Foundation.CustomWrappers
@using Fortis.Foundation.CodeGen.Templates.Feature.Person
@model IRenderingModel<ICustomItemWrapper, IEmployee>

@{
    if (Model.RenderingItem == null)
    {
        @Html.PageEditorError(AlertTexts.InvalidDataSourceTemplate(EmployeeConstants.TemplateID), AlertTexts.InvalidDataSourceTemplateFriendlyMessage, Model.PageItem?.ItemID, Model.RenderingItem?.ItemID)
        return;
    }

    var pageUrl = Model.RenderingItem.HasLayout() ? Model?.RenderingItem?.GenerateUrl() : null;
}

<aside class="@Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.GetBackgroundClass()">
    <div class="mosaic mosaic-bar-bottom mosaic-overlay-show">
        <div class="mosaic-overlay">
            <label>@Model.RenderingItem.Title</label>
            <h4>
                @Model.RenderingItem.Name
            </h4>
        </div>
        <div class="mosaic-backdrop">
            @if (pageUrl != null)
            {
                <a href="@pageUrl">
                    @Model.RenderingItem.Picture.Render(new { @class = "img-responsive", mw = 750 })
                </a>
            }
            else
            {
                @Model.RenderingItem.Picture.Render(new { @class = "img-responsive", mw = 750 })
            }
        </div>
    </div>

    <div class="caption text-center">
        <ul class="list list-unstyled">
            @if (Sitecore.Context.PageMode.IsExperienceEditor || Model.RenderingItem.Telephone.HasValue)
            {
                <li>
                    <a href="tel:@Model.RenderingItem.TelephoneValue" class="btn btn-link" role="button">
                        <span class="fa fa-phone fa-lg"></span> @Model.RenderingItem.Telephone
                    </a>
                </li>
            }
            @if (Sitecore.Context.PageMode.IsExperienceEditor || Model.RenderingItem.Mobile.HasValue)
            {
                <li>
                    <a href="tel:@Model.RenderingItem.MobileValue" class="btn btn-link" role="button">
                        <span class="fa fa-mobile fa-lg"></span> @Model.RenderingItem.Mobile
                    </a>
                </li>
            }
            @if (Sitecore.Context.PageMode.IsExperienceEditor || Model.RenderingItem.Email.HasValue)
            {
                <li>
                    <a href="mailto:@Model.RenderingItem.EmailValue" class="btn btn-link" role="button">
                        <span class="fa fa-envelope fa-lg"></span> @Model.RenderingItem.Email
                    </a>
                </li>
            }
        </ul>
        <div>
            <span class="btn-group">
                @if (Sitecore.Context.PageMode.IsExperienceEditor || Model.RenderingItem.BlogLink.HasValue)
                {
                    <a href="@Model.RenderingItem.BlogLink.Url" target="_blank" class="btn btn-info">
                        <i class="fa fa-globe"></i>
                    </a>
                }
                @if (Sitecore.Context.PageMode.IsExperienceEditor || Model.RenderingItem.TwitterLink.HasValue)
                {
                    <a href="@Model.RenderingItem.TwitterLink.Url" target="_blank" class="btn btn-social-icon btn-twitter">
                        <i class="fa fa-twitter"></i>
                    </a>
                }
                @if (Sitecore.Context.PageMode.IsExperienceEditor || Model.RenderingItem.FacebookLink.HasValue)
                {
                    <a href="@Model.RenderingItem.FacebookLink.Url" target="_blank" class="btn btn-social-icon btn-facebook">
                        <i class="fa fa-facebook"></i>
                    </a>
                }
                @if (Sitecore.Context.PageMode.IsExperienceEditor || Model.RenderingItem.LinkedInLink.HasValue)
                {
                    <a href="@Model.RenderingItem.LinkedInLink.Url" target="_blank" class="btn btn-social-icon btn-linkedin">
                        <i class="fa fa-linkedin"></i>
                    </a>
                }
            </span>
            @if (pageUrl != null)
            {
                <a href="@pageUrl" class="btn btn-default">
                    @Html.Sitecore().Dictionary("/Person/EmployeeContactTeaser/Read more", "Read more")
                </a>
            }
        </div>
    </div>
</aside>