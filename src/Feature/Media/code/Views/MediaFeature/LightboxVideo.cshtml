@using Sitecore.Foundation.Alerts
@using Sitecore.Foundation.Alerts.Extensions
@using Fortis.Model
@using Fortis.Foundation.CodeGen.Templates.Feature.Media
@model IRenderingModel<IItemWrapper, IHasMediaVideo>

@if (Model.RenderingItem == null)
{
    @Html.PageEditorError(AlertTexts.InvalidDataSourceTemplate(HasMediaVideoConstants.TemplateID), AlertTexts.InvalidDataSourceTemplateFriendlyMessage, Model.PageItem?.ItemID, Model.RenderingItem?.ItemID)
    return;
}

@*TODO: Page editor mode*@
@{
    const int ThumbnailWidth = 750;
    var thumbnail = Model.RenderingItem.MediaThumbnail.Render(new {@class = "img-responsive", mw = ThumbnailWidth});

    if (string.IsNullOrWhiteSpace(thumbnail?.ToString()))
    {
        return;
    }

    var mediaType = Model.RenderingItem.MediaVideoLink.IsMediaLink? "video" : "";
}

<div class="thumbnail mosaic mosaic-circle lightbox-item lightbox-image">
    <div class="mosaic-overlay mosaic-overlay-no-pointer">
        <span class="fa fa-play-circle icon-lg"></span>
    </div>
    <div class="mosaic-backdrop">
        <a href="@Model.RenderingItem.MediaVideoLink.Url" data-type="@mediaType" data-title="@Model.RenderingItem.MediaTitleValue" data-footer="@Html.Encode(Model.RenderingItem.MediaDescriptionValue)" data-toggle="lightbox" data-gallery="page" data-width="@ThumbnailWidth">
            @thumbnail
        </a>
    </div>
</div>